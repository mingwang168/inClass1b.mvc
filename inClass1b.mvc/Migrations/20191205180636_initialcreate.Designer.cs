// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inClass1b.mvc.Models.Portifolio;

namespace inClass1b.mvc.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20191205180636_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("inClass1b.mvc.Models.Portifolio.Project", b =>
                {
                    b.Property<int>("ProjectId");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("inClass1b.mvc.Models.Portifolio.ProjectTechnology", b =>
                {
                    b.Property<string>("TechnologyName");

                    b.Property<int>("ProjectId");

                    b.HasKey("TechnologyName", "ProjectId");

                    b.HasAlternateKey("ProjectId", "TechnologyName");

                    b.ToTable("ProjectTechnologies");
                });

            modelBuilder.Entity("inClass1b.mvc.Models.Portifolio.Technology", b =>
                {
                    b.Property<string>("Name");

                    b.HasKey("Name");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("inClass1b.mvc.Models.Portifolio.ProjectTechnology", b =>
                {
                    b.HasOne("inClass1b.mvc.Models.Portifolio.Project", "Project")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("inClass1b.mvc.Models.Portifolio.Technology", "Technology")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("TechnologyName")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
